-----------------------------------------------------------Records-------------------------------------------------------------------------
                                                        
                                               Two ways to declare variables:
    emps hr.employees%rowtype;
    type r_emps is record (
        first_name varchar2(55),
        last_name varchar2(55)
        );
    emps_2 r_emps;

                                               To insert values into the record:
                                               
select * into emps from hr.employees where employee_id = 101;
select first_name, last_name into emps_2 from hr.employees where employee_id = 102;

                                               To update the values in the record:
emps.first_name := ‘stan’;

*if you have a record inside a record, it will need its own select clause if you want to insert values into it.
*Records don’t have any attributes like collections do.

-----------------------------------------------------------VARRAY--------------------------------------------------------------------------

                                                    Declaring and Initializing:
                                                    
type r_emps is varray(5) of varchar2(55);
emps r_emps := r_emps('stan', 'kyle', 'kenny');
emps r_emps := r_emps();

                                                       Printing the varray:
                                                    
    for i in 1..3 loop
        dbms_output.put_line(emps(i));
    end loop;
    
                                                      Post insert example:
                                                      
declare
    type r_emps is varray(15) of varchar2(55);
    emps r_emps := r_emps();
    idx pls_integer := 1;
begin
    --Populates the varray
    for i in 100..110 loop
        emps.extend;
        select first_name into emps(idx) from hr.employees where employee_id = i;
        idx := idx + 1;
    end loop;
    
    --prints the contents of the varray.
    for i in emps.first..emps.count loop
        dbms_output.put_line(emps(i));
    end loop;
end;

                                                       Schema level Varray
                                                       
create type r_emps is varray(15) of varchar2(55)

declare
    emps r_emps := r_emps();
    idx pls_integer := 1;
begin
    --populate
    for i in 100..110 loop
        emps.extend;
        select first_name into emps(idx) from hr.employees where employee_id = i;
        idx := idx + 1;
    end loop;
    
    --print
    for i in emps.first..emps.last loop
        dbms_output.put_line(emps(i));
    end loop;
end; 

                                                          Attributes:
                                                          
.count
(prints the amount of elements stored in the array)
.first
(prints the first element in the varray)
.last
(prints the last element in the varray)
.limit
(prints maximum capacity of the varray)
.exists()
(returns true if an element exists in the current index)

------------------------------------------------------------NESTED TABLE----------------------------------------------------------------

                                                       Declaring a nested table:





















