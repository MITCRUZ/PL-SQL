create or replace package body emp_pkg is
  function base_table return emp_tbl is 
    v_emps emp_tbl;
  begin
    --Populates our associative array
    for cur_emps in (select * from employees_copy) loop
        v_emps(cur_emps.employee_id) := cur_emps;
    end loop;
    return v_emps;
  end;
  
  function filtered_table return emp_tbl is
    v_emps emp_tbl;
    idx employees.employee_id%type;
  begin
    v_emps := base_table;
    idx := v_emps.first;
    while idx is not null loop
      if v_emps(idx).hire_date < base_date then
        v_emps.delete(idx);
      end if;
      idx := v_emps.next(idx);
    end loop;
    return v_emps;
  end;

  function arrange_for_changes(v_emp in out employees%rowtype) return employees%rowtype is
  begin    
    if v_emp.department_id = 100 then
      v_emp.department_id := 200;
    else
      v_emp.department_id := 100;
    end if;    
    return v_emp;    
  end;

  procedure run_pkg is 
    v_emps emp_tbl;
    v_emp employees%rowtype;
    idx employees.employee_id%type;
  begin
    v_emps := filtered_table;
    idx := v_emps.first;
    while idx is not null loop
      v_emp := arrange_for_changes(v_emps(idx));
      update employees_copy set row = v_emp where employee_id = idx;
      idx := v_emps.next(idx);
    end loop;
  end;

end;
