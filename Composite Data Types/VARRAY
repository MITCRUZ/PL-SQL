
                                                    Declaring and Initializing:

--Example of declaring
type r_emps is varray(5) of varchar2(55);

--First example of initializing
emps r_emps := r_emps('stan', 'kyle', 'kenny');

--Second example of initializing (Post insert)
emps r_emps := r_emps();

                                                       Printing the varray:
                                                    
for i in 1..3 loop
    dbms_output.put_line(emps(i));
end loop;
    
                                                      Post insert example:
                                                      
declare
    type r_emps is varray(15) of varchar2(55);
    emps r_emps := r_emps();
    idx pls_integer := 1;
begin
    --Populates the varray
    for i in 100..110 loop
        emps.extend;
        select first_name into emps(idx) from hr.employees where employee_id = i;
        idx := idx + 1;
    end loop;
    
    --prints the contents of the varray.
    for i in emps.first..emps.count loop
        dbms_output.put_line(emps(i));
    end loop;
end;

                                                       Schema level Varray
                                                       
create type r_emps is varray(15) of varchar2(55)

declare
    emps r_emps := r_emps();
    idx pls_integer := 1;
begin
    --populate
    for i in 100..110 loop
        emps.extend;
        select first_name into emps(idx) from hr.employees where employee_id = i;
        idx := idx + 1;
    end loop;
    
    --print
    for i in emps.first..emps.last loop
        dbms_output.put_line(emps(i));
    end loop;
end; 

                                                    Storing varray's in tables
                                                    
--creates an object at the schema level which acts as a record.
create type t_phone_number is object (
    p_type varchar2(55),
    p_number varchar2(55)
    );
    
--creates a varray of the same type as our previous object.
create type v_phone_numbers is varray(3) of t_phone_number;

--creates a table with four columns, one of them being a varray (a column within a column)
create table emps_with_phones (employee_id number,
                               first_name varchar2(50),
                               last_name varchar2(50),
                               phone_number v_phone_numbers);
                               
--insert values into the table
insert into emps_with_phones
  values (1, 'joe', 'bob', v_phone_numbers(t_phone_number('home', '111.111.1111'),
                                           t_phone_number('work', '222.222.2222')));
                                           
--queries the data int the table while using the table operator in order to properly represent our object
select e.first_name, e.last_name, w.p_type, w.p_number from emps_with_phones e, table(e.phone_number) w;


                                                            Attributes
                                                            
.count
(prints the amount of elements stored in the array)
.first
(prints the first element in the varray)
.last
(prints the last element in the varray)
.limit
(prints maximum capacity of the varray)
.exists()
(returns true if an element exists in the current index)
                                                            
==============================================================NOTES=====================================================================
*Can be added to tables if created at schema level
