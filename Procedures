------------------------------------------------------------Procedures--------------------------------------------------------------------------

                                                         Without Procedures

begin
  dbms_output.put_line('line 1');
end; 

                                                          With Procedures
                                                          
begin
  print('my line');
end;

                                                Creating a Procedure with parameters
                                                          
create procedure procedure_name (parameter [in | out | in out] type) {is | as}
begin
  code...
end;  

                                                Simple example of a procedure and its use
                                                
procedure addNums(num1 number, num2 number, resultNum out number) is 
begin 
    resultNum := num1 + num2; 
end;
/
declare
    num1 number := 5;
    num2 number := 6;
    resultNum number := 0;
begin
    addNums(num1, num2, resultNum);
    dbms_output.put_line(num1 || ' + ' || num2 || ' = ' || resultNum);
end;

                                                            Another Example
                                                            
create or replace procedure pow(target_num number, power_of number, v_result out number) is
idx number := 0;
base_num number := 1;
begin
    while idx < power_of loop  
        base_num := base_num * target_num;
        idx := idx + 1;
    end loop;
    v_result := base_num;
    dbms_output.put_line(target_num || ' to the power of ' || power_of || ' is ' || v_result);
end;
/
declare
    v_num number := 2;
    v_power number := 0;
    v_result number;
begin   
    pow(v_num, v_power, v_result);
end;

                                                            Another Example
                                                            
procedure find_min (num1 number, num2 number, v_result out number) is 
is_equal boolean := false; 
begin 
    if (num1 < num2) then 
        v_result := num1; 
    elsif (num1 > num2) then 
        v_result := num2; 
    else     
        v_result := num1; 
        is_equal := true; 
    end if; 
     
    if (is_equal) then 
        dbms_output.put_line('Both values are equal.'); 
    end if; 
    dbms_output.put_line('Yo, the minimum value here is ' || v_result); 
exception 
    when OTHERS then 
        dbms_output.put_line('Yo, watch out, theres an error here: ' || SQLERRM); 
end;        
/
declare
    num1 number := 3;
    num2 number := 321;
    v_result number;
begin
    find_min(num1, num2, v_result);
end; 
                                                   
